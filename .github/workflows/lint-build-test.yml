---
name: Lint, build & test
on:
  push:
    branches:
      - master
      - renovate/**
    paths-ignore:
      - "**.md"
      - "img/**"
      - "test/**"
      - ".gitignore"
      - "docker/**"
      - "helm/**"
      - "renovate.json"
      - ".krew.yaml"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "img/**"
      - "test/**"
      - ".gitignore"
      - "docker/**"
      - "helm/**"
      - "renovate.json"
      - ".krew.yaml"

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Setup Go
        uses: actions/setup-go@v2.1.5
        with:
          # renovate: go
          go-version: 1.17.5
      - name: Ensure go.mod is already tidied
        run: go mod tidy && git diff --no-patch --exit-code
      - name: Ensure gofmt
        if: ${{ always() }}
        run: test -z "$(gofmt -s -d .)"
      - name: Run linters
        if: ${{ always() }}
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          # renovate: golangci-lint
          version: v1.43.0
          skip-go-installation: true
          args: --timeout=3m0s
      - name: Build with Goreleaser
        if: ${{ always() }}
        uses: goreleaser/goreleaser-action@v2.8.0
        with:
          # renovate: goreleaser
          version: v1.2.5
          args: build --snapshot --rm-dist --single-target
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Setup Go
        uses: actions/setup-go@v2.1.5
        with:
          # renovate: go
          go-version: 1.17.5
      - name: Install richgo
        run: go install github.com/kyoh86/richgo@v0.3.10
      - name: Create Kind Cluster 1
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: kind-1
          version: v0.11.1
          node_image: docker.io/kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - name: Install MetalLB
        run: |
          IP_RANGE_PREFIX=$(docker network inspect -f '{{(index .IPAM.Config 0).Subnet}}' kind | cut -d. -f1-3)
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm upgrade metallb \
          --install bitnami/metallb \
          --version 2.5.14 \
          --namespace metallb-system \
          --create-namespace \
          --wait \
          --values test/metallb-values.yaml \
          --set configInline.address-pools[0].addresses[0]=${IP_RANGE_PREFIX}.240-${IP_RANGE_PREFIX}.255
          helm -n metallb-system get values metallb
      - name: Create Kind Cluster 2
        uses: helm/kind-action@v1.2.0
        env:
          KUBECONFIG: /home/runner/.kube/kind-2.yaml
        with:
          cluster_name: kind-2
          version: v0.11.1
          node_image: docker.io/kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
      - name: Run tests
        env:
          RICHGO_FORCE_COLOR: "1"
          PVMIG_TEST_EXTRA_KUBECONFIG: "/home/runner/.kube/kind-2.yaml"
        run: richgo test -coverpkg=./... -coverprofile=profile.cov -covermode=count -timeout 20m -v ./...
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1.5.1
        with:
          path-to-profile: profile.cov
          shallow: true
