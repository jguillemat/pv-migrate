---
name: Lint, build & test
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "img/**"
      - "test/**"
      - ".gitignore"
      - "docker/**"
      - "helm/**"
      - "renovate.json"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "img/**"
      - "test/**"
      - ".gitignore"
      - "docker/**"
      - "helm/**"
      - "renovate.json"

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          # renovate: go
          go-version: 1.17
      - name: Ensure go.mod is already tidied
        run: go mod tidy && git diff --no-patch --exit-code
      - name: Ensure gofmt
        if: ${{ always() }}
        run: test -z "$(gofmt -s -d .)"
      - name: Run linters
        if: ${{ always() }}
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          # renovate: golangci-lint
          version: v1.43.0
          skip-go-installation: true
          args: --timeout=3m0s
      - name: Build with Goreleaser
        if: ${{ always() }}
        uses: goreleaser/goreleaser-action@v2.8.0
        with:
          # renovate: goreleaser
          version: v1.0.0
          args: build --snapshot --rm-dist --single-target
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          # renovate: go
          go-version: 1.17
      - name: Install go-acc
        # renovate: go-acc
        run: go install github.com/ory/go-acc@v0.2.6
      - name: Create Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          version: v0.11.1
          node_image: docker.io/kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
      - name: Deploy MetalLB
        run: kubectl apply -f test/metallb.yaml
      - name: Run tests
        run: go-acc --output profile.cov ./... -- -v -timeout 20m
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1.5.0
        with:
          path-to-profile: profile.cov
          shallow: true
