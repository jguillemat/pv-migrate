---
name: build

on:
  push:
    branches:
      - master
      - renovate/**
    paths-ignore:
      - "**.md"
      - "img/**"
      - "test/**"
      - ".gitignore"
      - "docker/**"
      - "helm/**"
      - "renovate.json"
      - ".krew.yaml"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "img/**"
      - "test/**"
      - ".gitignore"
      - "docker/**"
      - "helm/**"
      - "renovate.json"
      - ".krew.yaml"

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Install go
        uses: actions/setup-go@v3.2.0
        with:
          # renovate: go
          go-version: 1.18.3
      - name: Ensure go.mod is already tidied
        run: go mod tidy && git diff --no-patch --exit-code
      - name: Run linters
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          # renovate: depName=golangci/golangci-lint
          version: v1.46.2
          args: --timeout=3m0s
      - name: Build with Goreleaser
        if: ${{ always() }}
        uses: goreleaser/goreleaser-action@v3.0.0
        with:
          # renovate: depName=goreleaser/goreleaser
          version: v1.9.2
          args: build --snapshot --rm-dist --single-target
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Install go
        uses: actions/setup-go@v3.2.0
        with:
          # renovate: go
          go-version: 1.18.3
      - name: Install richgo
        # renovate: depName=kyoh86/richgo
        run: go install github.com/kyoh86/richgo@v0.3.10
      - name: Install helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - name: Install cilium-cli
        env:
          # renovate: depName=cilium/cilium-cli
          CILIUM_CLI_VERSION: v0.11.7
        run: |
          wget https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-amd64.tar.gz
          sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin
          rm cilium-linux-amd64.tar.gz

      - name: kind-1 - Create cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: kind-1
          # renovate: depName=kubernetes-sigs/kind
          version: v0.14.0
          config: test/kind-config.yaml
      - name: kind-1 - Create metallb-system namespace
        run: kubectl create namespace metallb-system --dry-run=client -oyaml | kubectl apply -f -
      - name: kind-1 - Install allow-all network policies on system namespaces
        run: |
          kubectl -n kube-system apply -f test/netpol-allow-all.yaml
          kubectl -n local-path-storage apply -f test/netpol-allow-all.yaml
          kubectl -n metallb-system apply -f test/netpol-allow-all.yaml
      - name: kind-1 - Install Cilium with default-deny policy
        run: cilium install --config enable-policy=always
      - name: kind-1 - Install MetalLB
        env:
          # renovate: depName=metallb datasource=helm registryUrl=https://charts.bitnami.com/bitnami
          METALLB_CHART_VERSION: 3.0.9
        run: |
          IP_RANGE_PREFIX=$(docker network inspect -f '{{(index .IPAM.Config 0).Subnet}}' kind | cut -d. -f1-3)
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm upgrade metallb \
          --install bitnami/metallb \
          --namespace metallb-system \
          --version ${METALLB_CHART_VERSION} \
          --atomic \
          --values test/metallb-values.yaml \
          --set configInline.address-pools[0].addresses[0]=${IP_RANGE_PREFIX}.240-${IP_RANGE_PREFIX}.255
          helm -n metallb-system get values metallb
      - name: kind-1 - Wait for all pods in the cluster to be ready
        run: |
          for i in $(seq 1 10); do
            echo "Attempt: $i"
            kubectl wait pod --for=condition=Ready --all --all-namespaces && break;
            sleep 5;
          done

      - name: kind-2 - Create cluster
        uses: helm/kind-action@v1.2.0
        env:
          KUBECONFIG: /home/runner/.kube/kind-2.yaml
        with:
          cluster_name: kind-2
          # renovate: depName=kubernetes-sigs/kind
          version: v0.14.0
          config: test/kind-config.yaml
      - name: kind-2 - Install allow-all network policies on system namespaces
        env:
          KUBECONFIG: /home/runner/.kube/kind-2.yaml
        run: |
          kubectl -n kube-system apply -f test/netpol-allow-all.yaml
          kubectl -n local-path-storage apply -f test/netpol-allow-all.yaml
      - name: kind-2 - Install Cilium with default-deny policy
        env:
          KUBECONFIG: /home/runner/.kube/kind-2.yaml
        run: cilium install --config enable-policy=always
      - name: kind-2 - Wait for all pods in the cluster to be ready
        env:
          KUBECONFIG: /home/runner/.kube/kind-2.yaml
        run: |
          for i in $(seq 1 10); do
            echo "Attempt: $i"
            kubectl wait pod --for=condition=Ready --all --all-namespaces && break;
            sleep 5;
          done

      - name: Run tests
        env:
          RICHGO_FORCE_COLOR: "1"
          PVMIG_TEST_EXTRA_KUBECONFIG: /home/runner/.kube/kind-2.yaml
        run: richgo test -coverpkg=./... -coverprofile=profile.cov -covermode=count -timeout 20m -v ./...
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1.6.0
        with:
          path-to-profile: profile.cov
          shallow: true
